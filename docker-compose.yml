services:
  gpt-cpu:
    image: ${REGISTRY_USER}/${REGISTRY_REPO}-gpt-cpu:${IMAGE_TAG}
    profiles: ["cpu"]
    build:
      context: ./src/gpt
    environment:
      - NUM_THREADS=${NUM_THREADS}
      - MAX_PROMPT_LENGTH=${MAX_PROMPT_LENGTH}
      - MAX_TOKENS=${MAX_TOKENS}
      - GPU_LAYERS=${GPU_LAYERS}
      - LLM_REPO=${LLM_REPO}
      - TOP_K=${TOP_K}
      - TOP_P=${TOP_P}
      - TEMPERATURE=${TEMPERATURE}
      - LLM_NAME=${LLM_NAME}
      - USE_GPU=false
      - BATCH_SIZE=${BATCH_SIZE}
      - REPETITION_PENALTY=${REPETITION_PENALTY}
    volumes:
      - ./cache/models:/app/models
      - ./cache/cache:/root/.cache/llama_cpp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 60s
  gpt-gpu:
    image: ${REGISTRY_USER}/${REGISTRY_REPO}-gpt-gpu:${IMAGE_TAG}
    build:
      context: ./src/gpt
    profiles: ["gpu"]
    environment:
      LLM_REPO: ${LLM_REPO}
      LLM_NAME: ${LLM_NAME}
      USE_GPU: "true"
      USE_CUDA: "cuda"
      MAX_PROMPT_LENGTH: ${MAX_PROMPT_LENGTH}
      MAX_TOKENS: ${MAX_TOKENS}
      GPU_LAYERS: ${GPU_LAYERS}
      TOP_K: ${TOP_K}
      TOP_P: ${TOP_P}
      TEMPERATURE: ${TEMPERATURE}
      REPETITION_PENALTY: ${REPETITION_PENALTY}
      GGML_CUDA: "1"
      BATCH_SIZE: ${BATCH_SIZE}
      NUM_THREADS: ${NUM_THREADS}
    volumes:
      - ./cache/models:/app/models
      - ./cache/cache:/root/.cache/llama_cpp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      retries: 3
    device_requests:
      - driver: nvidia
        count: all
        capabilities: [gpu]
    restart: unless-stopped
  mailer:
    image: ${REGISTRY_USER}/${REGISTRY_REPO}-mailer:${IMAGE_TAG}
    build:
      context: ./src/mailer
    environment:
      - EMAIL_USER=${MAIL_USER}
      - EMAIL_PASS=${MAIL_PASS}
      - IMAP_SERVER=${MAIL_HOST}
      - ORCHESTRATOR_URL=http://orchestrator:5000/process_email

  db:
    image: ${REGISTRY_USER}/${REGISTRY_REPO}-db:${IMAGE_TAG}
    build:
      context: ./src/db
    volumes:
      - ./cache/sqlite:/data

  orchestrator:
    image: ${REGISTRY_USER}/${REGISTRY_REPO}-orchestrator:${IMAGE_TAG}
    build:
      context: ./src/orchestrator
    environment:
      - DB_PATH=/data/db.sqlite
      - GPT_SERVICE=${GPT_SERVICE}
      - BOT_EMAIL=${MAIL_USER}
      - BOT_PASS=${MAIL_PASS}
      - SMTP_SERVER=${MAIL_HOST}
      - PROMPT_FILE=${PROMPT_FILE}
    volumes:
      - ./cache/sqlite:/data
      - ./cache/vector_db:/app/vector_db
      - ./assets/:/app/assets

networks:
  default:
    name: ${PROJECT_NAME}-network      